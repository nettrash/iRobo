/*
	svcRoumingMobileOperator.h
	The implementation of properties and methods for the svcRoumingMobileOperator object.
	Generated by SudzC.com
*/
#import "svcRoumingMobileOperator.h"

@implementation svcRoumingMobileOperator
	@synthesize operatorId = _operatorId;
	@synthesize name = _name;
	@synthesize country = _country;
	@synthesize currency = _currency;
	@synthesize regex = _regex;
	@synthesize productlist = _productlist;
	@synthesize retailpricelist = _retailpricelist;
	@synthesize currLabel = _currLabel;
	@synthesize active = _active;

	- (id) init
	{
		if(self = [super init])
		{
			self.name = nil;
			self.country = nil;
			self.currency = nil;
			self.regex = nil;
			self.productlist = nil;
			self.retailpricelist = nil;
			self.currLabel = nil;

		}
		return self;
	}

	+ (svcRoumingMobileOperator*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.operatorId = [[Soap getNodeValue: node withName: @"operatorId"] intValue];
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.country = [Soap getNodeValue: node withName: @"country"];
			self.currency = [Soap getNodeValue: node withName: @"currency"];
			self.regex = [Soap getNodeValue: node withName: @"regex"];
			self.productlist = [Soap getNodeValue: node withName: @"productlist"];
			self.retailpricelist = [Soap getNodeValue: node withName: @"retailpricelist"];
			self.currLabel = [Soap getNodeValue: node withName: @"currLabel"];
			self.active = [[Soap getNodeValue: node withName: @"active"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RoumingMobileOperator"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<operatorId>%@</operatorId>", [NSString stringWithFormat: @"%i", self.operatorId]];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.country != nil) [s appendFormat: @"<country>%@</country>", [[self.country stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.currency != nil) [s appendFormat: @"<currency>%@</currency>", [[self.currency stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.regex != nil) [s appendFormat: @"<regex>%@</regex>", [[self.regex stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.productlist != nil) [s appendFormat: @"<productlist>%@</productlist>", [[self.productlist stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.retailpricelist != nil) [s appendFormat: @"<retailpricelist>%@</retailpricelist>", [[self.retailpricelist stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.currLabel != nil) [s appendFormat: @"<currLabel>%@</currLabel>", [[self.currLabel stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<active>%@</active>", (self.active)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcRoumingMobileOperator class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
