/*
	svcShopCatalogItem.h
	The implementation of properties and methods for the svcShopCatalogItem object.
	Generated by SudzC.com
*/
#import "svcShopCatalogItem.h"

@implementation svcShopCatalogItem
	@synthesize catalogId = _catalogId;
	@synthesize catalogParentId = _catalogParentId;
	@synthesize catalogName = _catalogName;
	@synthesize catalogOrder = _catalogOrder;
	@synthesize catalogTopOrder = _catalogTopOrder;
	@synthesize catalogShopCount = _catalogShopCount;

	- (id) init
	{
		if(self = [super init])
		{
			self.catalogName = nil;

		}
		return self;
	}

	+ (svcShopCatalogItem*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.catalogId = [[Soap getNodeValue: node withName: @"catalogId"] intValue];
			self.catalogParentId = [[Soap getNodeValue: node withName: @"catalogParentId"] intValue];
			self.catalogName = [Soap getNodeValue: node withName: @"catalogName"];
			self.catalogOrder = [[Soap getNodeValue: node withName: @"catalogOrder"] intValue];
			self.catalogTopOrder = [[Soap getNodeValue: node withName: @"catalogTopOrder"] intValue];
			self.catalogShopCount = [[Soap getNodeValue: node withName: @"catalogShopCount"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ShopCatalogItem"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<catalogId>%@</catalogId>", [NSString stringWithFormat: @"%i", self.catalogId]];
		[s appendFormat: @"<catalogParentId>%@</catalogParentId>", [NSString stringWithFormat: @"%i", self.catalogParentId]];
		if (self.catalogName != nil) [s appendFormat: @"<catalogName>%@</catalogName>", [[self.catalogName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<catalogOrder>%@</catalogOrder>", [NSString stringWithFormat: @"%i", self.catalogOrder]];
		[s appendFormat: @"<catalogTopOrder>%@</catalogTopOrder>", [NSString stringWithFormat: @"%i", self.catalogTopOrder]];
		[s appendFormat: @"<catalogShopCount>%@</catalogShopCount>", [NSString stringWithFormat: @"%i", self.catalogShopCount]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcShopCatalogItem class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
