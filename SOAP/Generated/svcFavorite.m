/*
	svcFavorite.h
	The implementation of properties and methods for the svcFavorite object.
	Generated by SudzC.com
*/
#import "svcFavorite.h"

@implementation svcFavorite
	@synthesize favoriteId = _favoriteId;
	@synthesize favoriteName = _favoriteName;
	@synthesize cardId = _cardId;
	@synthesize currency = _currency;
	@synthesize currencyName = _currencyName;
	@synthesize parameters = _parameters;
	@synthesize summa = _summa;
	@synthesize UNIQUE = _UNIQUE;
	@synthesize sortOrder = _sortOrder;
    @synthesize zeroComission = _zeroComission;
    @synthesize OutPossibleValues = _OutPossibleValues;

	- (id) init
	{
		if(self = [super init])
		{
			self.favoriteName = nil;
			self.currency = nil;
			self.currencyName = nil;
			self.parameters = nil;
			self.summa = nil;
			self.UNIQUE = nil;
            self.OutPossibleValues = nil;
		}
		return self;
	}

	+ (svcFavorite*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.favoriteId = [[Soap getNodeValue: node withName: @"favoriteId"] intValue];
			self.favoriteName = [Soap getNodeValue: node withName: @"favoriteName"];
			self.cardId = [[Soap getNodeValue: node withName: @"cardId"] intValue];
			self.currency = [Soap getNodeValue: node withName: @"currency"];
			self.currencyName = [Soap getNodeValue: node withName: @"currencyName"];
			self.parameters = [Soap getNodeValue: node withName: @"parameters"];
			self.summa = [NSDecimalNumber decimalNumberWithString: [Soap getNodeValue: node withName: @"summa"]];
			self.UNIQUE = [Soap getNodeValue: node withName: @"UNIQUE"];
			self.sortOrder = [[Soap getNodeValue: node withName: @"sortOrder"] intValue];
            self.OutPossibleValues = [Soap getNodeValue: node withName: @"OutPossibleValues"];
            self.zeroComission = [[Soap getNodeValue: node withName: @"zeroComission"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Favorite"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<favoriteId>%@</favoriteId>", [NSString stringWithFormat: @"%i", self.favoriteId]];
		if (self.favoriteName != nil) [s appendFormat: @"<favoriteName>%@</favoriteName>", [[self.favoriteName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<cardId>%@</cardId>", [NSString stringWithFormat: @"%i", self.cardId]];
		if (self.currency != nil) [s appendFormat: @"<currency>%@</currency>", [[self.currency stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.currencyName != nil) [s appendFormat: @"<currencyName>%@</currencyName>", [[self.currencyName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.parameters != nil) [s appendFormat: @"<parameters>%@</parameters>", [[self.parameters stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.summa != nil) [s appendFormat: @"<summa>%@</summa>", [NSString stringWithFormat: @"%@", self.summa]];
		if (self.UNIQUE != nil) [s appendFormat: @"<UNIQUE>%@</UNIQUE>", [[self.UNIQUE stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<sortOrder>%@</sortOrder>", [NSString stringWithFormat: @"%i", self.sortOrder]];
        if (self.OutPossibleValues != nil) [s appendFormat: @"<OutPossibleValues>%@</OutPossibleValues>", [[self.OutPossibleValues stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
        [s appendFormat: @"<zeroComission>%@</zeroComission>", (self.zeroComission)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcFavorite class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
