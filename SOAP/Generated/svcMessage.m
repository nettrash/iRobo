/*
	svcMessage.h
	The implementation of properties and methods for the svcMessage object.
	Generated by SudzC.com
*/
#import "svcMessage.h"

@implementation svcMessage
	@synthesize Id = _Id;
	@synthesize RegDate = _RegDate;
	@synthesize Title = _Title;
	@synthesize Body = _Body;
	@synthesize URL = _URL;
	@synthesize Mood = _Mood;

	- (id) init
	{
		if(self = [super init])
		{
			self.RegDate = nil;
			self.Title = nil;
			self.Body = nil;
			self.URL = nil;
			self.Mood = nil;

		}
		return self;
	}

	+ (svcMessage*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Id = [[Soap getNodeValue: node withName: @"Id"] intValue];
			self.RegDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"RegDate"]];
			self.Title = [Soap getNodeValue: node withName: @"Title"];
			self.Body = [Soap getNodeValue: node withName: @"Body"];
			self.URL = [Soap getNodeValue: node withName: @"URL"];
			self.Mood = [Soap getNodeValue: node withName: @"Mood"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Message"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Id>%@</Id>", [NSString stringWithFormat: @"%i", self.Id]];
		if (self.RegDate != nil) [s appendFormat: @"<RegDate>%@</RegDate>", [Soap getDateString: self.RegDate]];
		if (self.Title != nil) [s appendFormat: @"<Title>%@</Title>", [[self.Title stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Body != nil) [s appendFormat: @"<Body>%@</Body>", [[self.Body stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.URL != nil) [s appendFormat: @"<URL>%@</URL>", [[self.URL stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Mood != nil) [s appendFormat: @"<Mood>%@</Mood>", [[self.Mood stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcMessage class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
