/*
	svcSettings.h
	The implementation of properties and methods for the svcSettings object.
	Generated by SudzC.com
*/
#import "svcSettings.h"

@implementation svcSettings
	@synthesize IsBlacklisted = _IsBlacklisted;
	@synthesize IsActive = _IsActive;
	@synthesize NeedLogin = _NeedLogin;
	@synthesize Phone = _Phone;
	@synthesize EMail = _EMail;
	@synthesize EMailApproved = _EMailApproved;
	@synthesize PhoneApproved = _PhoneApproved;
	@synthesize UNIQUE = _UNIQUE;
	@synthesize DevicePlatform = _DevicePlatform;

	- (id) init
	{
		if(self = [super init])
		{
			self.Phone = nil;
			self.EMail = nil;
			self.UNIQUE = nil;
			self.DevicePlatform = nil;

		}
		return self;
	}

	+ (svcSettings*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.IsBlacklisted = [[Soap getNodeValue: node withName: @"IsBlacklisted"] boolValue];
			self.IsActive = [[Soap getNodeValue: node withName: @"IsActive"] boolValue];
			self.NeedLogin = [[Soap getNodeValue: node withName: @"NeedLogin"] boolValue];
			self.Phone = [Soap getNodeValue: node withName: @"Phone"];
			self.EMail = [Soap getNodeValue: node withName: @"EMail"];
			self.EMailApproved = [[Soap getNodeValue: node withName: @"EMailApproved"] boolValue];
			self.PhoneApproved = [[Soap getNodeValue: node withName: @"PhoneApproved"] boolValue];
			self.UNIQUE = [Soap getNodeValue: node withName: @"UNIQUE"];
			self.DevicePlatform = [Soap getNodeValue: node withName: @"DevicePlatform"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Settings"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<IsBlacklisted>%@</IsBlacklisted>", (self.IsBlacklisted)?@"true":@"false"];
		[s appendFormat: @"<IsActive>%@</IsActive>", (self.IsActive)?@"true":@"false"];
		[s appendFormat: @"<NeedLogin>%@</NeedLogin>", (self.NeedLogin)?@"true":@"false"];
		if (self.Phone != nil) [s appendFormat: @"<Phone>%@</Phone>", [[self.Phone stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.EMail != nil) [s appendFormat: @"<EMail>%@</EMail>", [[self.EMail stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<EMailApproved>%@</EMailApproved>", (self.EMailApproved)?@"true":@"false"];
		[s appendFormat: @"<PhoneApproved>%@</PhoneApproved>", (self.PhoneApproved)?@"true":@"false"];
		if (self.UNIQUE != nil) [s appendFormat: @"<UNIQUE>%@</UNIQUE>", [[self.UNIQUE stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.DevicePlatform != nil) [s appendFormat: @"<DevicePlatform>%@</DevicePlatform>", [[self.DevicePlatform stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcSettings class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
