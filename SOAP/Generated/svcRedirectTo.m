/*
	svcRedirectTo.h
	The implementation of properties and methods for the svcRedirectTo object.
	Generated by SudzC.com
*/
#import "svcRedirectTo.h"

@implementation svcRedirectTo
	@synthesize Url = _Url;
	@synthesize Target = _Target;

	- (id) init
	{
		if(self = [super init])
		{
			self.Url = nil;
			self.Target = nil;

		}
		return self;
	}

	+ (svcRedirectTo*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Url = [Soap getNodeValue: node withName: @"Url"];
			self.Target = [Soap getNodeValue: node withName: @"Target"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"RedirectTo"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Url != nil) [s appendFormat: @"<Url>%@</Url>", [[self.Url stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Target != nil) [s appendFormat: @"<Target>%@</Target>", [[self.Target stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[svcRedirectTo class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
