/*
	svcWSMobileBANK.m
	The implementation classes and methods for the WSMobileBANK web service.
	Generated by SudzC.com
*/

#import "svcWSMobileBANK.h"
				
#import "Soap.h"
	
#import "svcDeviceStatItem.h"
#import "svcCardStat.h"
#import "svcFavorite.h"
#import "svcCurrency.h"
#import "svcTopCurrency.h"
#import "svcRoumingMobileOperator.h"
#import "svcArrayOfString.h"
#import "svcRedirectTo.h"
#import "svcHistoryOperation.h"
#import "svcShopCatalogItem.h"
#import "svcShopItem.h"
#import "svcArrayOfMessage.h"
#import "svcMessage.h"
#import "svcSettings.h"
#import "svcArrayOfDeviceStatItem.h"
#import "svcArrayOfCard.h"
#import "svcCard.h"
#import "svcArrayOfFavorite.h"
#import "svcArrayOfCurrency.h"
#import "svcArrayOfParameter.h"
#import "svcArrayOfTopCurrency.h"
#import "svcArrayOfRoumingMobileOperator.h"
#import "svcArrayOfHistoryOperation.h"
#import "svcArrayOfCheck.h"
#import "svcArrayOfShopCatalogItem.h"
#import "svcArrayOfShopItem.h"
#import "svcArrayOfTerminal.h"
#import "svcTerminal.h"
#import "svcCharity.h"
#import "svcWSResponse.h"
#import "svcParameter.h"
#import "svcOperationState.h"
#import "svcCheck.h"

/* Implementation of the service */
				
@implementation svcWSMobileBANK

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"https://misc.roboxchange.com/External/iPhone/WSMobileBANK.asmx";
			self.namespace = @"http://misc.roboxchange.com/External/iPhone";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (svcWSMobileBANK*) service {
		return [svcWSMobileBANK serviceWithUsername:nil andPassword:nil];
	}
	
	+ (svcWSMobileBANK*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[svcWSMobileBANK alloc] initWithUsername:username andPassword:password];
	}

		
	// Returns svcWSResponse*
	/* Получение настроек устройства */
	- (SoapRequest*) GetSettings: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform Device: (NSString*) Device
	{
		return [self GetSettings: handler action: nil UNIQUE: UNIQUE Platform: Platform Device: Device];
	}

	- (SoapRequest*) GetSettings: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform Device: (NSString*) Device
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Platform forName: @"Platform"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Device forName: @"Device"]];
		NSString* _envelope = [Soap createEnvelope: @"GetSettings" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetSettings" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Сохранение настроек устройства */
	- (SoapRequest*) SaveSettings: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Phone: (NSString*) Phone EMail: (NSString*) EMail
	{
		return [self SaveSettings: handler action: nil UNIQUE: UNIQUE Phone: Phone EMail: EMail];
	}

	- (SoapRequest*) SaveSettings: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Phone: (NSString*) Phone EMail: (NSString*) EMail
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Phone forName: @"Phone"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: EMail forName: @"EMail"]];
		NSString* _envelope = [Soap createEnvelope: @"SaveSettings" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SaveSettings" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Установка/удаление пароля для входа в программу на устройстве */
	- (SoapRequest*) SetPassword: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Password: (NSString*) Password
	{
		return [self SetPassword: handler action: nil UNIQUE: UNIQUE Password: Password];
	}

	- (SoapRequest*) SetPassword: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Password: (NSString*) Password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Password forName: @"Password"]];
		NSString* _envelope = [Soap createEnvelope: @"SetPassword" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SetPassword" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка пароля для входа на устройстве */
	- (SoapRequest*) CheckPassword: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Password: (NSString*) Password
	{
		return [self CheckPassword: handler action: nil UNIQUE: UNIQUE Password: Password];
	}

	- (SoapRequest*) CheckPassword: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Password: (NSString*) Password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Password forName: @"Password"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckPassword" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckPassword" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Начать проверку EMail */
	- (SoapRequest*) CheckEMail: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self CheckEMail: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) CheckEMail: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckEMail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckEMail" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Начать проверку телефона */
	- (SoapRequest*) CheckPhone: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self CheckPhone: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) CheckPhone: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckPhone" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckPhone" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Закончить проверку телефона */
	- (SoapRequest*) ApprovePhone: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Code: (NSString*) Code
	{
		return [self ApprovePhone: handler action: nil UNIQUE: UNIQUE Code: Code];
	}

	- (SoapRequest*) ApprovePhone: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Code: (NSString*) Code
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Code forName: @"Code"]];
		NSString* _envelope = [Soap createEnvelope: @"ApprovePhone" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ApprovePhone" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Сохранить метку для уведомлений */
	- (SoapRequest*) SaveDeviceToken: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Token: (NSString*) Token
	{
		return [self SaveDeviceToken: handler action: nil UNIQUE: UNIQUE Token: Token];
	}

	- (SoapRequest*) SaveDeviceToken: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Token: (NSString*) Token
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Token forName: @"Token"]];
		NSString* _envelope = [Soap createEnvelope: @"SaveDeviceToken" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SaveDeviceToken" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка корректности EMail */
	- (SoapRequest*) ValidateEMail: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE EMail: (NSString*) EMail
	{
		return [self ValidateEMail: handler action: nil UNIQUE: UNIQUE EMail: EMail];
	}

	- (SoapRequest*) ValidateEMail: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE EMail: (NSString*) EMail
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: EMail forName: @"EMail"]];
		NSString* _envelope = [Soap createEnvelope: @"ValidateEMail" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ValidateEMail" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка наличия новой версии */
	- (SoapRequest*) GetCurrentVersion: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform appName: (NSString*) appName
	{
		return [self GetCurrentVersion: handler action: nil UNIQUE: UNIQUE Platform: Platform appName: appName];
	}

	- (SoapRequest*) GetCurrentVersion: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform appName: (NSString*) appName
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Platform forName: @"Platform"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: appName forName: @"appName"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCurrentVersion" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCurrentVersion" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка наличия новой версии Ex */
	- (SoapRequest*) GetCurrentVersionEx: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform appName: (NSString*) appName currentVersion: (NSString*) currentVersion deviceName: (NSString*) deviceName OSVersion: (NSString*) OSVersion
	{
		return [self GetCurrentVersionEx: handler action: nil UNIQUE: UNIQUE Platform: Platform appName: appName currentVersion: currentVersion deviceName: deviceName OSVersion: OSVersion];
	}

	- (SoapRequest*) GetCurrentVersionEx: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Platform: (NSString*) Platform appName: (NSString*) appName currentVersion: (NSString*) currentVersion deviceName: (NSString*) deviceName OSVersion: (NSString*) OSVersion
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Platform forName: @"Platform"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: appName forName: @"appName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currentVersion forName: @"currentVersion"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: deviceName forName: @"deviceName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OSVersion forName: @"OSVersion"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCurrentVersionEx" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCurrentVersionEx" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Сброс всех настроек устройства */
	- (SoapRequest*) ClearDevice: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self ClearDevice: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) ClearDevice: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"ClearDevice" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ClearDevice" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение статистики по устройству */
	- (SoapRequest*) GetDeviceStat: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self GetDeviceStat: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) GetDeviceStat: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"GetDeviceStat" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetDeviceStat" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Миграция на новые VENDOR_ID */
	- (SoapRequest*) ActivateVendorId: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
	{
		return [self ActivateVendorId: handler action: nil UNIQUE: UNIQUE OpKey: OpKey];
	}

	- (SoapRequest*) ActivateVendorId: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		NSString* _envelope = [Soap createEnvelope: @"ActivateVendorId" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ActivateVendorId" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение списка карт устройства */
	- (SoapRequest*) GetCards: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Hash: (NSString*) Hash NotIncludeRemoved: (BOOL)NotIncludeRemoved NotIncludeNotAuthorized: (BOOL)NotIncludeNotAuthorized
	{
		return [self GetCards: handler action: nil UNIQUE: UNIQUE Hash: Hash NotIncludeRemoved: NotIncludeRemoved NotIncludeNotAuthorized:NotIncludeNotAuthorized];
	}

	- (SoapRequest*) GetCards: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Hash: (NSString*) Hash NotIncludeRemoved: (BOOL)NotIncludeRemoved NotIncludeNotAuthorized: (BOOL)NotIncludeNotAuthorized
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Hash forName: @"Hash"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: NotIncludeRemoved] forName: @"NotIncludeRemoved"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: NotIncludeNotAuthorized] forName: @"NotIncludeNotAuthorized"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCards" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCards" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Регистрация карты на устройстве */
	- (SoapRequest*) RegisterCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardName: (NSString*) cardName cardNumber: (NSString*) cardNumber cardType: (NSString*) cardType cardYear: (int) cardYear cardMonth: (int) cardMonth cardHolder: (NSString*) cardHolder
	{
		return [self RegisterCard: handler action: nil UNIQUE: UNIQUE cardName: cardName cardNumber: cardNumber cardType: cardType cardYear: cardYear cardMonth: cardMonth cardHolder: cardHolder];
	}

	- (SoapRequest*) RegisterCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardName: (NSString*) cardName cardNumber: (NSString*) cardNumber cardType: (NSString*) cardType cardYear: (int) cardYear cardMonth: (int) cardMonth cardHolder: (NSString*) cardHolder
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: cardName forName: @"cardName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: cardNumber forName: @"cardNumber"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: cardType forName: @"cardType"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardYear] forName: @"cardYear"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardMonth] forName: @"cardMonth"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: cardHolder forName: @"cardHolder"]];
		NSString* _envelope = [Soap createEnvelope: @"RegisterCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/RegisterCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Удаление карты с устройства */
	- (SoapRequest*) RemoveCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
	{
		return [self RemoveCard: handler action: nil UNIQUE: UNIQUE cardId: cardId];
	}

	- (SoapRequest*) RemoveCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		NSString* _envelope = [Soap createEnvelope: @"RemoveCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/RemoveCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Начало авторизации карты */
	- (SoapRequest*) BeginAuthorizeCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId cvc: (NSString*) cvc
	{
		return [self BeginAuthorizeCard: handler action: nil UNIQUE: UNIQUE cardId: cardId cvc: cvc];
	}

	- (SoapRequest*) BeginAuthorizeCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId cvc: (NSString*) cvc
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: cvc forName: @"cvc"]];
		NSString* _envelope = [Soap createEnvelope: @"BeginAuthorizeCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/BeginAuthorizeCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка состояния авторизации карты */
	- (SoapRequest*) CheckAuthorizeCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
	{
		return [self CheckAuthorizeCard: handler action: nil UNIQUE: UNIQUE cardId: cardId];
	}

	- (SoapRequest*) CheckAuthorizeCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckAuthorizeCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckAuthorizeCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверка состояния авторизации карты с 3D */
	- (SoapRequest*) CheckAuthorizeCardWith3D: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
	{
		return [self CheckAuthorizeCardWith3D: handler action: nil UNIQUE: UNIQUE cardId: cardId];
	}

	- (SoapRequest*) CheckAuthorizeCardWith3D: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckAuthorizeCardWith3D" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckAuthorizeCardWith3D" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Завершение авторизации карты */
	- (SoapRequest*) EndAuthorizeCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId authSum: (NSDecimalNumber*) authSum
	{
		return [self EndAuthorizeCard: handler action: nil UNIQUE: UNIQUE cardId: cardId authSum: authSum];
	}

	- (SoapRequest*) EndAuthorizeCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId authSum: (NSDecimalNumber*) authSum
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: authSum forName: @"authSum"]];
		NSString* _envelope = [Soap createEnvelope: @"EndAuthorizeCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/EndAuthorizeCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение статистики по карте */
	- (SoapRequest*) GetCardStat: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
	{
		return [self GetCardStat: handler action: nil UNIQUE: UNIQUE cardId: cardId];
	}

	- (SoapRequest*) GetCardStat: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCardStat" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCardStat" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

    // Returns svcWSResponse*
    /* Получение данных по карте */
    - (SoapRequest*) GetCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
    {
        return [self GetCard: handler action: nil UNIQUE: UNIQUE cardId: cardId];
    }

    - (SoapRequest*) GetCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
        NSString* _envelope = [Soap createEnvelope: @"GetCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCard" postData:_envelope deserializeTo: [svcWSResponse alloc]];
        [_request send];
        return _request;
    }

    // Returns svcWSResponse*
	/* Получение списка избранных платежей */
	- (SoapRequest*) GetFavorites: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Hash: (NSString*) Hash
	{
		return [self GetFavorites: handler action: nil UNIQUE: UNIQUE Hash: Hash];
	}

	- (SoapRequest*) GetFavorites: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Hash: (NSString*) Hash
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Hash forName: @"Hash"]];
		NSString* _envelope = [Soap createEnvelope: @"GetFavorites" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetFavorites" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Добавление записи в избранное */
	- (SoapRequest*) AddFavorite: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId favoriteName: (NSString*) favoriteName currency: (NSString*) currency currencyName: (NSString*) currencyName cardId: (int) cardId parameters: (NSString*) parameters summa: (NSDecimalNumber*) summa
	{
		return [self AddFavorite: handler action: nil UNIQUE: UNIQUE favoriteId: favoriteId favoriteName: favoriteName currency: currency currencyName: currencyName cardId: cardId parameters: parameters summa: summa];
	}

	- (SoapRequest*) AddFavorite: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId favoriteName: (NSString*) favoriteName currency: (NSString*) currency currencyName: (NSString*) currencyName cardId: (int) cardId parameters: (NSString*) parameters summa: (NSDecimalNumber*) summa
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: favoriteId] forName: @"favoriteId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: favoriteName forName: @"favoriteName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currencyName forName: @"currencyName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: parameters forName: @"parameters"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summa forName: @"summa"]];
		NSString* _envelope = [Soap createEnvelope: @"AddFavorite" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/AddFavorite" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Изменение записи в избранном */
	- (SoapRequest*) ModifyFavorite: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId favoriteName: (NSString*) favoriteName cardId: (int) cardId parameters: (NSString*) parameters summa: (NSDecimalNumber*) summa
	{
		return [self ModifyFavorite: handler action: nil UNIQUE: UNIQUE favoriteId: favoriteId favoriteName: favoriteName cardId: cardId parameters: parameters summa: summa];
	}

	- (SoapRequest*) ModifyFavorite: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId favoriteName: (NSString*) favoriteName cardId: (int) cardId parameters: (NSString*) parameters summa: (NSDecimalNumber*) summa
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: favoriteId] forName: @"favoriteId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: favoriteName forName: @"favoriteName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: parameters forName: @"parameters"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summa forName: @"summa"]];
		NSString* _envelope = [Soap createEnvelope: @"ModifyFavorite" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ModifyFavorite" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Удаление записи из избранного */
	- (SoapRequest*) RemoveFavorite: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId
	{
		return [self RemoveFavorite: handler action: nil UNIQUE: UNIQUE favoriteId: favoriteId];
	}

	- (SoapRequest*) RemoveFavorite: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE favoriteId: (int) favoriteId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: favoriteId] forName: @"favoriteId"]];
		NSString* _envelope = [Soap createEnvelope: @"RemoveFavorite" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/RemoveFavorite" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Сохранение сортировки записей в избранном */
	- (SoapRequest*) SaveFavoritesOrder: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE orderList: (NSString*) orderList
	{
		return [self SaveFavoritesOrder: handler action: nil UNIQUE: UNIQUE orderList: orderList];
	}

	- (SoapRequest*) SaveFavoritesOrder: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE orderList: (NSString*) orderList
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: orderList forName: @"orderList"]];
		NSString* _envelope = [Soap createEnvelope: @"SaveFavoritesOrder" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SaveFavoritesOrder" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение каталога (для полного обновления надо передавать номер версии меньший нуля) */
	- (SoapRequest*) GetCatalog: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE version: (int) version
	{
		return [self GetCatalog: handler action: nil UNIQUE: UNIQUE version: version];
	}

	- (SoapRequest*) GetCatalog: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE version: (int) version
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: version] forName: @"version"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCatalog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCatalog" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

    // Returns svcWSResponse*
    /* Получение каталога часто используемых методов платежа */
    - (SoapRequest*) GetTopCatalog: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
    {
        return [self GetTopCatalog: handler action: nil UNIQUE: UNIQUE];
    }

    - (SoapRequest*) GetTopCatalog: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
        NSString* _envelope = [Soap createEnvelope: @"GetTopCatalog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetTopCatalog" postData: _envelope deserializeTo: [svcWSResponse alloc]];
        [_request send];
        return _request;
    }

    // Returns svcWSResponse*
    /* Поиск методов платежа по каталогу */
    - (SoapRequest*) SearchCatalog: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Part: (NSString*) Part
    {
        return [self SearchCatalog: handler action: nil UNIQUE: UNIQUE Part: Part];
    }

    - (SoapRequest*) SearchCatalog: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Part: (NSString*) Part
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: Part forName: @"Part"]];
        NSString* _envelope = [Soap createEnvelope: @"SearchCatalog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SearchCatalog" postData: _envelope deserializeTo: [svcWSResponse alloc]];
        [_request send];
        return _request;
    }

	// Returns svcWSResponse*
	/* Получение параметров для совершения оплаты */
	- (SoapRequest*) GetParameters: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency
	{
		return [self GetParameters: handler action: nil UNIQUE: UNIQUE currency: currency];
	}

	- (SoapRequest*) GetParameters: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		NSString* _envelope = [Soap createEnvelope: @"GetParameters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetParameters" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение параметров для совершения оплаты счета */
	- (SoapRequest*) GetIncParameters: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency checkId: (int) checkId
	{
		return [self GetIncParameters: handler action: nil UNIQUE: UNIQUE currency: currency checkId: checkId];
	}

	- (SoapRequest*) GetIncParameters: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency checkId: (int) checkId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: checkId] forName: @"checkId"]];
		NSString* _envelope = [Soap createEnvelope: @"GetIncParameters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetIncParameters" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение состояния операции */
	- (SoapRequest*) GetOperationState: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
	{
		return [self GetOperationState: handler action: nil UNIQUE: UNIQUE OpKey: OpKey];
	}

	- (SoapRequest*) GetOperationState: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		NSString* _envelope = [Soap createEnvelope: @"GetOperationState" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetOperationState" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

    // Returns svcWSResponse*
    /* Применение страничных параметров */
    - (SoapRequest*) ApproveParameters: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey parameters: (NSString*) parameters
    {
        return [self ApproveParameters: handler action: nil UNIQUE: UNIQUE OpKey: OpKey parameters: parameters];
    }

    - (SoapRequest*) ApproveParameters: (id) target action: (SEL) action UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey parameters: (NSString*) parameters
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: parameters forName: @"parameters"]];
        NSString* _envelope = [Soap createEnvelope: @"ApproveParameters" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: target action: action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/ApproveParameters" postData: _envelope deserializeTo: [svcWSResponse alloc]];
        [_request send];
        return _request;
    }

	// Returns svcWSResponse*
	/* Запуск операции на исполнение */
	- (SoapRequest*) StartOperation: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE cardId: (int) cardId summa: (NSDecimalNumber*) summa currency: (NSString*) currency parameters: (NSString*) parameters CVC: (NSString*) CVC
	{
		return [self StartOperation: handler action: nil UNIQUE: UNIQUE cardId: cardId summa: summa currency: currency parameters: parameters CVC: CVC];
	}

	- (SoapRequest*) StartOperation: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE cardId: (int) cardId summa: (NSDecimalNumber*) summa currency: (NSString*) currency parameters: (NSString*) parameters CVC: (NSString*) CVC
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summa forName: @"summa"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: parameters forName: @"parameters"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: CVC forName: @"CVC"]];
		NSString* _envelope = [Soap createEnvelope: @"StartOperation" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/StartOperation" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Рассчитать сумму для операции (Если IsInc истина, то на выходе выходная сумма, иначе - входная сумма) */
	- (SoapRequest*) CalcSum: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency IsInc: (BOOL) IsInc summ: (NSDecimalNumber*) summ
	{
		return [self CalcSum: handler action: nil UNIQUE: UNIQUE currency: currency IsInc: IsInc summ: summ];
	}

	- (SoapRequest*) CalcSum: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency IsInc: (BOOL) IsInc summ: (NSDecimalNumber*) summ
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: IsInc] forName: @"IsInc"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summ forName: @"summ"]];
		NSString* _envelope = [Soap createEnvelope: @"CalcSum" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CalcSum" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Рассчитать сумму для операции относительно метода платежа (Если IsInc истина, то на выходе выходная сумма, иначе - входная сумма) */
	- (SoapRequest*) CalcSumWithCard: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency IsInc: (BOOL) IsInc summ: (NSDecimalNumber*) summ cardId: (int) cardId
	{
		return [self CalcSumWithCard: handler action: nil UNIQUE: UNIQUE currency: currency IsInc: IsInc summ: summ cardId: cardId];
	}

	- (SoapRequest*) CalcSumWithCard: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency IsInc: (BOOL) IsInc summ: (NSDecimalNumber*) summ cardId: (int) cardId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: IsInc] forName: @"IsInc"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summ forName: @"summ"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		NSString* _envelope = [Soap createEnvelope: @"CalcSumWithCard" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CalcSumWithCard" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Привязка координат к операции */
	- (SoapRequest*) UpdateOperationGPS: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey Latitude: (NSDecimalNumber*) Latitude Longtitude: (NSDecimalNumber*) Longtitude
	{
		return [self UpdateOperationGPS: handler action: nil UNIQUE: UNIQUE OpKey: OpKey Latitude: Latitude Longtitude: Longtitude];
	}

	- (SoapRequest*) UpdateOperationGPS: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey Latitude: (NSDecimalNumber*) Latitude Longtitude: (NSDecimalNumber*) Longtitude
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Latitude forName: @"Latitude"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Longtitude forName: @"Longtitude"]];
		NSString* _envelope = [Soap createEnvelope: @"UpdateOperationGPS" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/UpdateOperationGPS" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Отправка сообщения в службу поддержки */
	- (SoapRequest*) SendMessageToSupport: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Subject: (NSString*) Subject Body: (NSString*) Body
	{
		return [self SendMessageToSupport: handler action: nil UNIQUE: UNIQUE Subject: Subject Body: Body];
	}

	- (SoapRequest*) SendMessageToSupport: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Subject: (NSString*) Subject Body: (NSString*) Body
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Subject forName: @"Subject"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Body forName: @"Body"]];
		NSString* _envelope = [Soap createEnvelope: @"SendMessageToSupport" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/SendMessageToSupport" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Отправка сообщения в службу поддержки с ключем операции */
	- (SoapRequest*) StoreMessageToSupport: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Subject: (NSString*) Subject Body: (NSString*) Body OpKey: (NSString*) OpKey
	{
		return [self StoreMessageToSupport: handler action: nil UNIQUE: UNIQUE Subject: Subject Body: Body OpKey: OpKey];
	}

	- (SoapRequest*) StoreMessageToSupport: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Subject: (NSString*) Subject Body: (NSString*) Body OpKey: (NSString*) OpKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Subject forName: @"Subject"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Body forName: @"Body"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		NSString* _envelope = [Soap createEnvelope: @"StoreMessageToSupport" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/StoreMessageToSupport" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение информационных сообщений */
	- (SoapRequest*) GetMessages: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
	{
		return [self GetMessages: handler action: nil UNIQUE: UNIQUE TIMESTAMP: TIMESTAMP];
	}

	- (SoapRequest*) GetMessages: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: TIMESTAMP forName: @"TIMESTAMP"]];
		NSString* _envelope = [Soap createEnvelope: @"GetMessages" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetMessages" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение истории операций */
	- (SoapRequest*) GetHistory: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
	{
		return [self GetHistory: handler action: nil UNIQUE: UNIQUE TIMESTAMP: TIMESTAMP];
	}

	- (SoapRequest*) GetHistory: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: TIMESTAMP forName: @"TIMESTAMP"]];
		NSString* _envelope = [Soap createEnvelope: @"GetHistory" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetHistory" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Оплата счёта */
	- (SoapRequest*) PayCheck: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE checkId: (int) checkId cardId: (int) cardId CVC: (NSString*) CVC
	{
		return [self PayCheck: handler action: nil UNIQUE: UNIQUE checkId: checkId cardId: cardId CVC: CVC];
	}

	- (SoapRequest*) PayCheck: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE checkId: (int) checkId cardId: (int) cardId CVC: (NSString*) CVC
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: checkId] forName: @"checkId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: CVC forName: @"CVC"]];
		NSString* _envelope = [Soap createEnvelope: @"PayCheck" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/PayCheck" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Создание счёта */
	- (SoapRequest*) CreateCheck: (id <SoapDelegate>) handler OpKey: (NSString*) OpKey Phone: (NSString*) Phone MerchantName: (NSString*) MerchantName MerchantOrder: (NSString*) MerchantOrder Sum: (NSDecimalNumber*) Sum
	{
		return [self CreateCheck: handler action: nil OpKey: OpKey Phone: Phone MerchantName: MerchantName MerchantOrder: MerchantOrder Sum: Sum];
	}

	- (SoapRequest*) CreateCheck: (id) _target action: (SEL) _action OpKey: (NSString*) OpKey Phone: (NSString*) Phone MerchantName: (NSString*) MerchantName MerchantOrder: (NSString*) MerchantOrder Sum: (NSDecimalNumber*) Sum
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Phone forName: @"Phone"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: MerchantName forName: @"MerchantName"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: MerchantOrder forName: @"MerchantOrder"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Sum forName: @"Sum"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateCheck" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CreateCheck" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Отказ от оплаты счёта */
	- (SoapRequest*) DeclineCheck: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE checkId: (int) checkId
	{
		return [self DeclineCheck: handler action: nil UNIQUE: UNIQUE checkId: checkId];
	}

	- (SoapRequest*) DeclineCheck: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE checkId: (int) checkId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: checkId] forName: @"checkId"]];
		NSString* _envelope = [Soap createEnvelope: @"DeclineCheck" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/DeclineCheck" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить детализацию счёта */
	- (SoapRequest*) GetCheck: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE checkId: (int) checkId
	{
		return [self GetCheck: handler action: nil UNIQUE: UNIQUE checkId: checkId];
	}

	- (SoapRequest*) GetCheck: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE checkId: (int) checkId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: checkId] forName: @"checkId"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCheck" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCheck" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить счёта */
	- (SoapRequest*) GetChecks: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self GetChecks: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) GetChecks: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"GetChecks" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetChecks" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Создание просканированного счёта */
	- (SoapRequest*) CreateCheckByOpKey: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
	{
		return [self CreateCheckByOpKey: handler action: nil UNIQUE: UNIQUE OpKey: OpKey];
	}

	- (SoapRequest*) CreateCheckByOpKey: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE OpKey: (NSString*) OpKey
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OpKey forName: @"OpKey"]];
		NSString* _envelope = [Soap createEnvelope: @"CreateCheckByOpKey" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CreateCheckByOpKey" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Оплата счёта */
	- (SoapRequest*) PayCheckWithCurrency: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE checkId: (int) checkId currency: (NSString*) currency parameters: (NSString*) parameters
	{
		return [self PayCheckWithCurrency: handler action: nil UNIQUE: UNIQUE checkId: checkId currency: currency parameters: parameters];
	}

	- (SoapRequest*) PayCheckWithCurrency: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE checkId: (int) checkId currency: (NSString*) currency parameters: (NSString*) parameters
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: checkId] forName: @"checkId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: parameters forName: @"parameters"]];
		NSString* _envelope = [Soap createEnvelope: @"PayCheckWithCurrency" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/PayCheckWithCurrency" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Проверяет корректность суммы в звисимости от карты для устройства */
	- (SoapRequest*) CheckSum: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency OutSumm: (NSDecimalNumber*) OutSumm card_Id: (int) card_Id
	{
		return [self CheckSum: handler action: nil UNIQUE: UNIQUE currency: currency OutSumm: OutSumm card_Id: card_Id];
	}

	- (SoapRequest*) CheckSum: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE currency: (NSString*) currency OutSumm: (NSDecimalNumber*) OutSumm card_Id: (int) card_Id
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: currency forName: @"currency"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: OutSumm forName: @"OutSumm"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: card_Id] forName: @"card_Id"]];
		NSString* _envelope = [Soap createEnvelope: @"CheckSum" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/CheckSum" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить каталог магазинов */
	- (SoapRequest*) GetShopCatalog: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE
	{
		return [self GetShopCatalog: handler action: nil UNIQUE: UNIQUE];
	}

	- (SoapRequest*) GetShopCatalog: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		NSString* _envelope = [Soap createEnvelope: @"GetShopCatalog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetShopCatalog" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить список магазинов в ветке каталога */
	- (SoapRequest*) GetShopsInCatalog: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE catalogId: (int) catalogId
	{
		return [self GetShopsInCatalog: handler action: nil UNIQUE: UNIQUE catalogId: catalogId];
	}

	- (SoapRequest*) GetShopsInCatalog: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE catalogId: (int) catalogId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: catalogId] forName: @"catalogId"]];
		NSString* _envelope = [Soap createEnvelope: @"GetShopsInCatalog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetShopsInCatalog" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить терминалы рядом с указанными координатами */
	- (SoapRequest*) GetTerminalsNearCoord: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Latitude: (NSDecimalNumber*) Latitude Longtitude: (NSDecimalNumber*) Longtitude Delta: (NSDecimalNumber*) Delta
	{
		return [self GetTerminalsNearCoord: handler action: nil UNIQUE: UNIQUE Latitude: Latitude Longtitude: Longtitude Delta: Delta];
	}

	- (SoapRequest*) GetTerminalsNearCoord: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Latitude: (NSDecimalNumber*) Latitude Longtitude: (NSDecimalNumber*) Longtitude Delta: (NSDecimalNumber*) Delta
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Latitude forName: @"Latitude"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Longtitude forName: @"Longtitude"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Delta forName: @"Delta"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTerminalsNearCoord" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetTerminalsNearCoord" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить изменения в терминалах */
	- (SoapRequest*) GetTerminals: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
	{
		return [self GetTerminals: handler action: nil UNIQUE: UNIQUE TIMESTAMP: TIMESTAMP];
	}

	- (SoapRequest*) GetTerminals: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: TIMESTAMP forName: @"TIMESTAMP"]];
		NSString* _envelope = [Soap createEnvelope: @"GetTerminals" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetTerminals" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получить данные по программе благотворительности */
	- (SoapRequest*) GetCharity: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE charityId: (int) charityId
	{
		return [self GetCharity: handler action: nil UNIQUE: UNIQUE charityId: charityId];
	}

	- (SoapRequest*) GetCharity: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE charityId: (int) charityId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: charityId] forName: @"charityId"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCharity" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCharity" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Принять пожертвование */
	- (SoapRequest*) PayCharity: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE charityId: (int) charityId cardId: (int) cardId summa: (NSDecimalNumber*) summa CVC: (NSString*) CVC PayerFIO: (NSString*) PayerFIO PayerAddress: (NSString*) PayerAddress
	{
		return [self PayCharity: handler action: nil UNIQUE: UNIQUE charityId: charityId cardId: cardId summa: summa CVC: CVC PayerFIO: PayerFIO PayerAddress: PayerAddress];
	}

	- (SoapRequest*) PayCharity: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE charityId: (int) charityId cardId: (int) cardId summa: (NSDecimalNumber*) summa CVC: (NSString*) CVC PayerFIO: (NSString*) PayerFIO PayerAddress: (NSString*) PayerAddress
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: charityId] forName: @"charityId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summa forName: @"summa"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: CVC forName: @"CVC"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: PayerFIO forName: @"PayerFIO"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: PayerAddress forName: @"PayerAddress"]];
		NSString* _envelope = [Soap createEnvelope: @"PayCharity" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/PayCharity" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение валюты по номеру телефона */
	- (SoapRequest*) GetCurrencyByPhone: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Phone: (NSString*) Phone
	{
		return [self GetCurrencyByPhone: handler action: nil UNIQUE: UNIQUE Phone: Phone];
	}

	- (SoapRequest*) GetCurrencyByPhone: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Phone: (NSString*) Phone
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Phone forName: @"Phone"]];
		NSString* _envelope = [Soap createEnvelope: @"GetCurrencyByPhone" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetCurrencyByPhone" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Покупка/пополнение виртуальной карты банка ОКЕАН */
	- (SoapRequest*) VISAVirtuonCharge: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE virtuonId: (int) virtuonId FIO: (NSString*) FIO Summa: (NSDecimalNumber*) Summa Phone: (NSString*) Phone EMail: (NSString*) EMail cardId: (int) cardId CVC: (NSString*) CVC
	{
		return [self VISAVirtuonCharge: handler action: nil UNIQUE: UNIQUE virtuonId: virtuonId FIO: FIO Summa: Summa Phone: Phone EMail: EMail cardId: cardId CVC: CVC];
	}

	- (SoapRequest*) VISAVirtuonCharge: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE virtuonId: (int) virtuonId FIO: (NSString*) FIO Summa: (NSDecimalNumber*) Summa Phone: (NSString*) Phone EMail: (NSString*) EMail cardId: (int) cardId CVC: (NSString*) CVC
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: virtuonId] forName: @"virtuonId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: FIO forName: @"FIO"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Summa forName: @"Summa"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Phone forName: @"Phone"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: EMail forName: @"EMail"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: cardId] forName: @"cardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: CVC forName: @"CVC"]];
		NSString* _envelope = [Soap createEnvelope: @"VISAVirtuonCharge" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/VISAVirtuonCharge" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Получение списка операторов зарубежных мобильных телефонов */
	- (SoapRequest*) GetRoumingMobileOperators: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
	{
		return [self GetRoumingMobileOperators: handler action: nil UNIQUE: UNIQUE TIMESTAMP: TIMESTAMP];
	}

	- (SoapRequest*) GetRoumingMobileOperators: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE TIMESTAMP: (NSString*) TIMESTAMP
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: TIMESTAMP forName: @"TIMESTAMP"]];
		NSString* _envelope = [Soap createEnvelope: @"GetRoumingMobileOperators" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/GetRoumingMobileOperators" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

	// Returns svcWSResponse*
	/* Авторизация в личном кабинете */
	- (SoapRequest*) Login: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE Login: (NSString*) Login Password: (NSString*) Password
	{
		return [self Login: handler action: nil UNIQUE: UNIQUE Login: Login Password: Password];
	}

	- (SoapRequest*) Login: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE Login: (NSString*) Login Password: (NSString*) Password
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Login forName: @"Login"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: Password forName: @"Password"]];
		NSString* _envelope = [Soap createEnvelope: @"Login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/Login" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
	}

    // Returns svcWSResponse*
    /* Перевод с карты не карту */
    - (SoapRequest*) Card2CardTransfer: (id <SoapDelegate>) handler UNIQUE: (NSString*) UNIQUE fromCardId: (int) fromCardId toCardId: (int) toCardId toCardNumber: (NSString *) toCardNumber summ: (NSDecimalNumber*) summ fromCardCVC : (NSString *) fromCardCVC
    {
        return [self Card2CardTransfer: handler action: nil UNIQUE:UNIQUE fromCardId:fromCardId toCardId:toCardId toCardNumber:toCardNumber summ:summ fromCardCVC:fromCardCVC];
    }

    - (SoapRequest*) Card2CardTransfer: (id) _target action: (SEL) _action UNIQUE: (NSString*) UNIQUE fromCardId: (int) fromCardId toCardId: (int) toCardId toCardNumber: (NSString *) toCardNumber summ: (NSDecimalNumber*) summ fromCardCVC : (NSString *) fromCardCVC
    {
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: UNIQUE forName: @"UNIQUE"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: fromCardId] forName: @"fromCardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: toCardId] forName: @"toCardId"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: toCardNumber forName: @"toCardNumber"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: summ forName: @"summ"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: fromCardCVC forName: @"fromCardCVC"]];
		NSString* _envelope = [Soap createEnvelope: @"Card2CardTransfer" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://misc.roboxchange.com/External/iPhone/Card2CardTransfer" postData: _envelope deserializeTo: [svcWSResponse alloc]];
		[_request send];
		return _request;
    }

@end
